{
  "contractName": "UpgradeAgent",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "originalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isUpgradeAgent",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenHolder",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "upgradeFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.18;\n\n\n/**\n * Upgrade agent interface inspired by Lunyr.\n *\n * Upgrade agent transfers tokens to a new version of a token contract.\n * Upgrade agent can be set on a token by the upgrade master.\n *\n * Steps are\n * - Upgradeabletoken.upgradeMaster calls UpgradeableToken.setUpgradeAgent()\n * - Individual token holders can now call UpgradeableToken.upgrade()\n *   -> This results to call UpgradeAgent.upgradeFrom() that issues new tokens\n *   -> UpgradeableToken.upgrade() reduces the original total supply based on amount of upgraded tokens\n *\n * Upgrade agent itself can be the token contract, or just a middle man contract doing the heavy lifting.\n */\ncontract UpgradeAgent {\n\n  uint public originalSupply;\n\n  /** Interface marker */\n  function isUpgradeAgent() public pure returns (bool) {\n    return true;\n  }\n\n  /**\n   * Upgrade amount of tokens to a new version.\n   *\n   * Only callable by UpgradeableToken.\n   *\n   * @param _tokenHolder Address that wants to upgrade its tokens\n   * @param _amount Number of tokens to upgrade. The address may consider to hold back some amount of tokens in the old version.\n   */\n  function upgradeFrom(address _tokenHolder, uint256 _amount) external;\n}\n",
  "sourcePath": "/Users/diegobarahona/Documents/Projects/Knowleadge/knowledge-contracts/contracts/interfaces/UpgradeAgent.sol",
  "ast": {
    "attributes": {
      "absolutePath": "/Users/diegobarahona/Documents/Projects/Knowleadge/knowledge-contracts/contracts/interfaces/UpgradeAgent.sol",
      "exportedSymbols": {
        "UpgradeAgent": [
          835
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".18"
          ]
        },
        "id": 817,
        "name": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": "Upgrade agent interface inspired by Lunyr.\n * Upgrade agent transfers tokens to a new version of a token contract.\nUpgrade agent can be set on a token by the upgrade master.\n * Steps are\n- Upgradeabletoken.upgradeMaster calls UpgradeableToken.setUpgradeAgent()\n- Individual token holders can now call UpgradeableToken.upgrade()\n  -> This results to call UpgradeAgent.upgradeFrom() that issues new tokens\n  -> UpgradeableToken.upgrade() reduces the original total supply based on amount of upgraded tokens\n * Upgrade agent itself can be the token contract, or just a middle man contract doing the heavy lifting.",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            835
          ],
          "name": "UpgradeAgent",
          "scope": 836
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "name": "originalSupply",
              "scope": 835,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 818,
                "name": "ElementaryTypeName",
                "src": "700:4:5"
              }
            ],
            "id": 819,
            "name": "VariableDeclaration",
            "src": "700:26:5"
          },
          {
            "attributes": {
              "constant": true,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "isUpgradeAgent",
              "payable": false,
              "scope": 835,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 820,
                "name": "ParameterList",
                "src": "780:2:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 827,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 821,
                        "name": "ElementaryTypeName",
                        "src": "804:4:5"
                      }
                    ],
                    "id": 822,
                    "name": "VariableDeclaration",
                    "src": "804:4:5"
                  }
                ],
                "id": 823,
                "name": "ParameterList",
                "src": "803:6:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 823
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 824,
                        "name": "Literal",
                        "src": "823:4:5"
                      }
                    ],
                    "id": 825,
                    "name": "Return",
                    "src": "816:11:5"
                  }
                ],
                "id": 826,
                "name": "Block",
                "src": "810:22:5"
              }
            ],
            "id": 827,
            "name": "FunctionDefinition",
            "src": "757:75:5"
          },
          {
            "attributes": {
              "body": null,
              "constant": false,
              "implemented": false,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "upgradeFrom",
              "payable": false,
              "scope": 835,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenHolder",
                      "scope": 834,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 828,
                        "name": "ElementaryTypeName",
                        "src": "1162:7:5"
                      }
                    ],
                    "id": 829,
                    "name": "VariableDeclaration",
                    "src": "1162:20:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_amount",
                      "scope": 834,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 830,
                        "name": "ElementaryTypeName",
                        "src": "1184:7:5"
                      }
                    ],
                    "id": 831,
                    "name": "VariableDeclaration",
                    "src": "1184:15:5"
                  }
                ],
                "id": 832,
                "name": "ParameterList",
                "src": "1161:39:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 833,
                "name": "ParameterList",
                "src": "1209:0:5"
              }
            ],
            "id": 834,
            "name": "FunctionDefinition",
            "src": "1141:69:5"
          }
        ],
        "id": 835,
        "name": "ContractDefinition",
        "src": "673:539:5"
      }
    ],
    "id": 836,
    "name": "SourceUnit",
    "src": "0:1213:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.18+commit.9cf6e910.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "1.0.1",
  "updatedAt": "2018-01-03T23:15:27.043Z"
}